
TODO (before any release)
-------------------------

* GUI

* Tidy prism-examples/pta, incl. delete brp

* Clarify semantic/type checks (consistency with games/digital)

* Check guards/invariants for convexity (for now, neither can be non-convex, see below)

* Clarify time divergence issues

* non-zeno checks?

* Sort VarList (two types - before and after constants evaluated). Need for simulator too.

* Digital clocks: No time-bounded until yet
* Digital clocks: Translation done sep for each property (e.g. for cmax)?

* Bug fix: action alphabet (syntactic) for sync lost in PTA object construction


TODO (later)
------------

* Enforce well-formedness checks (i.e. guards/resets imply target invariants)
  (as opposed to say supporting strong invariants,
   where targets with false invariants cannot be entered)
  - zone-based: check during reach using valids
    (or just during FW reach?) (nb: need to split dpost to do check)
    (see non-well-formed.nm/pctl for a test case)
    (if can't do that, syntax check using sat)
  - digital clocks: check invariants after transform/reach?

* On-the-fly global reachability to allow (for A-R engine):
  - access to other local and global vars
  - system endsystem?
 (then test on Arnd's BRP model + others)

* BRP example

* Translate non-convex guards to DNF and multiple transitions

* Investigate whether non-convex invariants can be supported (look at zone ops)



Bugs
----


Maybe todo
----------

* Games: Optimise number of states in time-bounded PTAs
  (extras added in old target states) using until in forwards reach?

* Fix: Creation of new names (adding extra _s) doesn't take into account prop file ot consts etc.

* Digital clocks: urgency?

* Digital clocks: optimisations?


Tidy
----

* Remove unneeded files from examples (prism-benchmark, rewards stuff)


Documentation
-------------

Where can clocks be used
* clock constraints (just (some) binops)
  - in guards
  - in invariants
* resets (normal updates, but to ints only)
* var decl.s
* generally must be convex (i.e. just conj of constraints) (can be relaxed a bit for digital clocks)

Currently, modules cannot access non-local vars (and there are no globals)
(this is too restrictive, e.g. for message passing)

Must have single initial state (is this true for digital clocks too?)

Invariants must come straight after var decls

