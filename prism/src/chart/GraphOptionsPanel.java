//==============================================================================
//
//	Copyright (c) 2002-2005, Andrew Hinton, Dave Parker
//
//	This file is part of PRISM.
//
//	PRISM is free software; you can redistribute it and/or modify
//	it under the terms of the GNU General Public License as published by
//	the Free Software Foundation; either version 2 of the License, or
//	(at your option) any later version.
//
//	PRISM is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License
//	along with PRISM; if not, write to the Free Software Foundation,
//	Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//==============================================================================

package chart;
import java.util.*;
//import userinterface.util.*;
//import userinterface.GUIPrism;
import javax.swing.event.*;
import settings.*;
import javax.swing.*;

public class GraphOptionsPanel extends javax.swing.JPanel implements ListSelectionListener, Observer
{
	//private SettingTableModel graphModel, axisModel, seriesModel;
	private SettingTable graphProperties, axisProperties, seriesProperties;
	
	private SeriesList seriesList;
	
	private MultiGraphModel theModel;
	private MultiGraphModel.AxisOwner xAxis;
	private MultiGraphModel.AxisOwner yAxis;
	
	private JFrame parent;
	
	/** Creates new form GraphOptionsPanel */
	public GraphOptionsPanel(JFrame parent, MultiGraphModel theModel)
	{
		this.parent = parent;
		this.theModel = theModel;
		//graphModel = new PropertyTableModel();
		ArrayList own = new ArrayList();
		own.add(theModel);
		graphProperties = new SettingTable(parent);
		graphProperties.setOwners(own);
		//graphProperties.setNameColumnWidth(120);
		
		theModel.tellModelAboutGraphOptionsPanel(this);
		
		theModel.addObserver(this);
		
		xAxis = theModel.getXAxis();
		yAxis = theModel.getYAxis();
		
		
		
		//axisModel = new PropertyTableModel();
		own = new ArrayList();
		own.add(xAxis);
		//axisModel.setOwners(own);
		axisProperties = new SettingTable(parent);
		axisProperties.setOwners(own);
		
		xAxis.setDisplay(axisProperties);
		yAxis.setDisplay(axisProperties);
		
		seriesList = theModel.getSeriesList();
		seriesList.addListSelectionListener(this);
		//seriesModel = new PropertyTableModel();
		ArrayList ss = seriesList.getSelectedSeries();
		//seriesModel.setOwners(ss);
		
		seriesProperties = new SettingTable(parent);
		seriesProperties.setOwners(ss);
		initComponents();
		//addSeries.setEnabled(ss.size() > 0);
		removeSeries.setEnabled(ss.size() > 0);
		moveUp.setEnabled(ss.size() > 0);
		moveDown.setEnabled(ss.size() > 0);
		viewData.setEnabled(ss.size() > 0);
		
		
	}
	
	public void stopEditors()
	{
		graphProperties.stopEditing();
		axisProperties.stopEditing();
		seriesProperties.stopEditing();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//javax.swing.JPanel jPanel6;
    private void initComponents()//GEN-BEGIN:initComponents
    {
        java.awt.GridBagConstraints gridBagConstraints;
        javax.swing.JTabbedPane jTabbedPane1;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        axisSelection = new javax.swing.JComboBox();
        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel10 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        addSeries = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        removeSeries = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        moveUp = new javax.swing.JButton();
        jPanel30 = new javax.swing.JPanel();
        moveDown = new javax.swing.JButton();
        viewData = new javax.swing.JButton();
        jPanel34 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel32 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jPanel15, gridBagConstraints);

        jPanel16.setLayout(new java.awt.BorderLayout());

        jPanel16.add(graphProperties, java.awt.BorderLayout.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel1.add(jPanel17, gridBagConstraints);

        jTabbedPane1.addTab("Graph", jPanel1);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel4.add(axisProperties, java.awt.BorderLayout.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Select Axis:  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel5.add(jLabel1, gridBagConstraints);

        axisSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "X-Axis", "Y-Axis" }));
        axisSelection.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                axisSelectionActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel5.add(axisSelection, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jPanel18, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jPanel19, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        jPanel2.add(jPanel20, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jPanel21, gridBagConstraints);

        jTabbedPane1.addTab("Axis", jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel23.setLayout(new java.awt.BorderLayout());

        jPanel27.setLayout(new java.awt.GridBagLayout());

        jPanel27.setMaximumSize(new java.awt.Dimension(2147483647, 105));
        addSeries.setText("Add");
        addSeries.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addSeries.setMinimumSize(new java.awt.Dimension(5, 25));
        addSeries.setPreferredSize(new java.awt.Dimension(5, 25));
        addSeries.setIcon(new ImageIcon(ClassLoader.getSystemResource("images/smallAdd.gif")));
        addSeries.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addSeriesActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel27.add(addSeries, gridBagConstraints);

        jPanel28.setMaximumSize(new java.awt.Dimension(10, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel27.add(jPanel28, gridBagConstraints);

        removeSeries.setText("Remove");
        removeSeries.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        removeSeries.setMinimumSize(new java.awt.Dimension(5, 25));
        removeSeries.setPreferredSize(new java.awt.Dimension(5, 25));
        removeSeries.setIcon(new ImageIcon(ClassLoader.getSystemResource("images/smallDelete.gif")));
        removeSeries.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                removeSeriesActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel27.add(removeSeries, gridBagConstraints);

        jPanel29.setMaximumSize(new java.awt.Dimension(10, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel27.add(jPanel29, gridBagConstraints);

        moveUp.setText("Move Up");
        moveUp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        moveUp.setMinimumSize(new java.awt.Dimension(5, 25));
        moveUp.setPreferredSize(new java.awt.Dimension(5, 25));
        moveUp.setIcon(new ImageIcon(ClassLoader.getSystemResource("images/smallUp.gif")));
        moveUp.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                moveUpActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel27.add(moveUp, gridBagConstraints);

        jPanel30.setMaximumSize(new java.awt.Dimension(10, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel27.add(jPanel30, gridBagConstraints);

        moveDown.setText("Move Down");
        moveDown.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        moveDown.setMinimumSize(new java.awt.Dimension(5, 25));
        moveDown.setPreferredSize(new java.awt.Dimension(5, 25));
        moveDown.setIcon(new ImageIcon(ClassLoader.getSystemResource("images/smallDown.gif")));
        moveDown.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                moveDownActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel27.add(moveDown, gridBagConstraints);

        viewData.setText("Edit Data");
        viewData.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        viewData.setIcon(new ImageIcon(ClassLoader.getSystemResource("images/gridSnap.gif")));
        viewData.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                viewDataActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel27.add(viewData, gridBagConstraints);

        jPanel34.setMaximumSize(new java.awt.Dimension(10, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel27.add(jPanel34, gridBagConstraints);

        jPanel23.add(jPanel27, java.awt.BorderLayout.EAST);

        jPanel31.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setMaximumSize(new java.awt.Dimension(32767, 120));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(20, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(3, 120));
        jScrollPane1.setViewportView(seriesList);
        jPanel31.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel23.add(jPanel31, java.awt.BorderLayout.CENTER);

        jPanel32.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel32.setMaximumSize(new java.awt.Dimension(32767, 25));
        jLabel3.setText("Select Series:");
        jPanel32.add(jLabel3);

        jPanel23.add(jPanel32, java.awt.BorderLayout.NORTH);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(jPanel23, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jPanel33, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel10.add(jPanel7, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel10);

        jPanel14.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel14.add(jPanel25, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel14.add(jPanel24, gridBagConstraints);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel6.add(seriesProperties, java.awt.BorderLayout.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jPanel6, gridBagConstraints);

        jSplitPane1.setRightComponent(jPanel14);

        jPanel3.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Series", jPanel3);

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
	
    private void viewDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDataActionPerformed
		
		ArrayList ss = seriesList.getSelectedSeries();
		if(ss.size() > 1)
		{
			GraphListEditor.showEditors(parent, seriesList.getEditors());
		}
		else if(seriesList.getSelectedSeries().size() == 1)
			((GraphList)ss.get(0)).getEditor().showEditor(parent);
    }//GEN-LAST:event_viewDataActionPerformed
	
	private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_jTabbedPane1StateChanged
	{//GEN-HEADEREND:event_jTabbedPane1StateChanged
		
		stopEditors();
	}//GEN-LAST:event_jTabbedPane1StateChanged
	
	private void moveDownActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_moveDownActionPerformed
	{//GEN-HEADEREND:event_moveDownActionPerformed
		seriesList.moveDown();
	}//GEN-LAST:event_moveDownActionPerformed
	
	private void moveUpActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_moveUpActionPerformed
	{//GEN-HEADEREND:event_moveUpActionPerformed
		seriesList.moveUp();
	}//GEN-LAST:event_moveUpActionPerformed
	
	private void removeSeriesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_removeSeriesActionPerformed
	{//GEN-HEADEREND:event_removeSeriesActionPerformed
		seriesList.deleteSelectedSeries();
		if(theModel.getNoGraphs() == 0)
		{
			seriesProperties.setOwners(new ArrayList());
		}
	}//GEN-LAST:event_removeSeriesActionPerformed
	
	private void addSeriesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addSeriesActionPerformed
	{//GEN-HEADEREND:event_addSeriesActionPerformed
		
		try
		{
			if(theModel != null)
				theModel.addGraph("New Series");
		}
		catch(SettingException ex)
		{
			JOptionPane.showMessageDialog(this, ex.getMessage(), "Error adding series", JOptionPane.ERROR_MESSAGE);
		}
	}//GEN-LAST:event_addSeriesActionPerformed
	
	private void axisSelectionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_axisSelectionActionPerformed
	{//GEN-HEADEREND:event_axisSelectionActionPerformed
		if(axisSelection.getSelectedIndex() == 0)
		{
			stopEditors();
			ArrayList own = new ArrayList();
			own.add(xAxis);
			axisProperties.setOwners(own);
		}
		else
		{
			stopEditors();
			ArrayList own = new ArrayList();
			own.add(yAxis);
			axisProperties.setOwners(own);
		}
	}//GEN-LAST:event_axisSelectionActionPerformed
	
	public void valueChanged(ListSelectionEvent e)
	{
		stopEditors();
		ArrayList ss = seriesList.getSelectedSeries();
		seriesProperties.setOwners(ss);
		
		//addSeries.setEnabled(ss.size() > 0);
		removeSeries.setEnabled(ss.size() > 0);
		moveUp.setEnabled(ss.size() > 0);
		moveDown.setEnabled(ss.size() > 0);
		viewData.setEnabled(ss.size() > 0);
		
		//seriesList.addListSelectionListener(this);
	}
	
	public void update(Observable o, Object arg)
	{
		ArrayList own = new ArrayList();
		own.add(theModel);
		//graphProperties.setOwners(own);
		graphProperties.repaint();
		axisProperties.repaint();
		
		seriesProperties.repaint();
		//TO-DO this is quite drastic, is this necessary?
		/*jPanel6.remove(seriesProperties);
		seriesProperties = new SettingTable(this);
		seriesProperties.setOwners(seriesList.getSelectedSeries());
		jPanel6.add(seriesProperties, java.awt.BorderLayout.CENTER);*/
	}
	
	public void doListTitles()
	{
		//System.out.println("doListTitles caleled");
		graphProperties.refreshGroupNames();
		seriesProperties.refreshGroupNames();
		axisProperties.refreshGroupNames();
		seriesList.repaint();
	}
	
	public void errorDialog(String error, String title)
	{
		JOptionPane.showMessageDialog(parent,
		error,
		title, JOptionPane.ERROR_MESSAGE);
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSeries;
    javax.swing.JComboBox axisSelection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton moveDown;
    private javax.swing.JButton moveUp;
    private javax.swing.JButton removeSeries;
    private javax.swing.JButton viewData;
    // End of variables declaration//GEN-END:variables
	
	
   /* public static void main(String[]args)
	{
		javax.swing.JFrame f = new javax.swing.JFrame("Graph Options Test");
	
		GraphOptionsPanel gop = new GraphOptionsPanel();
	
		f.getContentPane().add(gop);
	
		f.pack();
		f.show();
		f.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
	
	}*/
}
