/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class mtbdd_PrismMTBDD */

#ifndef _Included_mtbdd_PrismMTBDD
#define _Included_mtbdd_PrismMTBDD
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_FreeGlobalRefs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mtbdd_PrismMTBDD_PM_1FreeGlobalRefs
  (JNIEnv *, jclass);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_SetCUDDManager
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mtbdd_PrismMTBDD_PM_1SetCUDDManager
  (JNIEnv *, jclass, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_SetMainLog
 * Signature: (Lprism/PrismLog;)V
 */
JNIEXPORT void JNICALL Java_mtbdd_PrismMTBDD_PM_1SetMainLog
  (JNIEnv *, jclass, jobject);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_SetTechLog
 * Signature: (Lprism/PrismLog;)V
 */
JNIEXPORT void JNICALL Java_mtbdd_PrismMTBDD_PM_1SetTechLog
  (JNIEnv *, jclass, jobject);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_SetLinEqMethod
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mtbdd_PrismMTBDD_PM_1SetLinEqMethod
  (JNIEnv *, jclass, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_SetLinEqMethodParam
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_mtbdd_PrismMTBDD_PM_1SetLinEqMethodParam
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_SetTermCrit
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mtbdd_PrismMTBDD_PM_1SetTermCrit
  (JNIEnv *, jclass, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_SetTermCritParam
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_mtbdd_PrismMTBDD_PM_1SetTermCritParam
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_SetMaxIters
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mtbdd_PrismMTBDD_PM_1SetMaxIters
  (JNIEnv *, jclass, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_SetDoSSDetect
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_mtbdd_PrismMTBDD_PM_1SetDoSSDetect
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_GetErrorMessage
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mtbdd_PrismMTBDD_PM_1GetErrorMessage
  (JNIEnv *, jclass);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_Reachability
 * Signature: (IIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1Reachability
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_Prob1
 * Signature: (IIIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1Prob1
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_Prob0
 * Signature: (IIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1Prob0
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_Prob1E
 * Signature: (IIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1Prob1E
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_Prob1A
 * Signature: (IIIIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1Prob1A
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_Prob0E
 * Signature: (IIIIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1Prob0E
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_Prob0A
 * Signature: (IIIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1Prob0A
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_ProbBoundedUntil
 * Signature: (IIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1ProbBoundedUntil
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_ProbUntil
 * Signature: (IIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1ProbUntil
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_ProbReachReward
 * Signature: (IIIIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1ProbReachReward
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_NondetBoundedUntil
 * Signature: (IIIIIIIIIIIIZ)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1NondetBoundedUntil
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jboolean);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_NondetUntil
 * Signature: (IIIIIIIIIIIZ)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1NondetUntil
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jboolean);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_NondetReachReward
 * Signature: (IIIIIIIIIIIIIIZ)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1NondetReachReward
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jboolean);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_StochBoundedUntil
 * Signature: (IIIIIIIIDI)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1StochBoundedUntil
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jdouble, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_StochCumulReward
 * Signature: (IIIIIIIID)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1StochCumulReward
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jdouble);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_StochSteadyState
 * Signature: (IIIIIII)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1StochSteadyState
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_StochTransient
 * Signature: (IIIIIIID)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1StochTransient
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jdouble);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_ExportVector
 * Signature: (ILjava/lang/String;IIIILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1ExportVector
  (JNIEnv *, jclass, jint, jstring, jint, jint, jint, jint, jstring);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_ExportMatrix
 * Signature: (ILjava/lang/String;IIIIIILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1ExportMatrix
  (JNIEnv *, jclass, jint, jstring, jint, jint, jint, jint, jint, jint, jstring);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_ExportLabels
 * Signature: ([I[Ljava/lang/String;Ljava/lang/String;IIIILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1ExportLabels
  (JNIEnv *, jclass, jintArray, jobjectArray, jstring, jint, jint, jint, jint, jstring);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_Power
 * Signature: (IIIIIIIIZ)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1Power
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jboolean);

/*
 * Class:     mtbdd_PrismMTBDD
 * Method:    PM_JOR
 * Signature: (IIIIIIIIZD)I
 */
JNIEXPORT jint JNICALL Java_mtbdd_PrismMTBDD_PM_1JOR
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jboolean, jdouble);

#ifdef __cplusplus
}
#endif
#endif
